@page "/games"
@using BowlingTrackerSupreme.Domain.Models
@using BowlingTrackerSupreme.Infrastructure.Database
@using Microsoft.EntityFrameworkCore
@inject BowlingTrackerSupremeDbContext DbContext
@attribute [StreamRendering]

<PageTitle>Games</PageTitle>

<h1>50 most recent games:</h1>

@if (_games == null) { <em>Loading...</em> }
else
{
    <table class="table">
        <thead>
			<tr>
				<th>Played On</th>
                <th class="text-nowrap">Winning player</th>
				<th class="text-nowrap">Created On</th>
				<th class="text-nowrap">Modified On</th>
			</tr>
        </thead>
        <tbody>
        @foreach (var game in _games)
        {
            <tr>
                <td class="w-100"><a href="game/@game.Id">@game.PlayedOn</a></td>
                <td class="text-nowrap"><a href="player/@game.WinningPlayerId">@game.WinningPlayer?.Name</a></td>
                <td class="text-end text-nowrap">@game.CreatedOn</td>
                <td class="text-end text-nowrap">@game.ModifiedOn</td>
            </tr>
        }
        </tbody>
    </table>
}

@code
{
    private IEnumerable<Domain.Models.Game>? _games;

    protected override async Task OnInitializedAsync()
    {
        _games = await DbContext.Games
            .Take(50)
            .OrderByDescending(g => g.CreatedOn)
            .Select(g => new Domain.Models.Game
            {
                Id = g.Id,
                CreatedOn = g.CreatedOn,
                ModifiedOn = g.ModifiedOn,
                WinningPlayer = g.WinningPlayer
            })
            .ToListAsync();
    }
}
